<script>
/**
 * Module to ajaxify all add to cart forms on the page.
 *
 * Copyright (c) 2015 Caroline Schnapp (11heavens.com)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
 var interval = null;  
 
Shopify.AjaxifyCart = (function($) {
  
  // Some configuration options.
  // I have separated what you will never need to change from what
  // you might change.
  
  var _config = {
    
    // What you might want to change
    addToCartBtnLabel:             'Shop now',
    addedToCartBtnLabel:           'Thank you!',
    addingToCartBtnLabel:          'Adding...',
    soldOutBtnLabel:               'Sold Out',
    howLongTillBtnReturnsToNormal: 1000, // in milliseconds.
    cartCountSelector:             '.cart-count, #cart-count a:first, #gocart p a, #cart .checkout em, .item-count',
    cartTotalSelector:             '#cart-price',
    // 'aboveForm' for top of add to cart form, 
    // 'belowForm' for below the add to cart form, and 
    // 'nextButton' for next to add to cart button.
    feedbackPosition:              'nextButton',
    
    // What you will never need to change
    addToCartBtnSelector:          '[type="submit"]',
    addToCartFormSelector:         'form[action="/cart/add"]',
    shopifyAjaxAddURL:             '/cart/add.js',
    shopifyAjaxCartURL:            '/cart.js'
  };
  
  // We need some feedback when adding an item to the cart.
  // Here it is.  
  var _showFeedback = function(success, html, $addToCartForm) {
    $('.ajaxified-cart-feedback').remove();
    var feedback = '<p class="ajaxified-cart-feedback ' + success + '">' + html + '</p>';
    switch (_config.feedbackPosition) {
      case 'aboveForm':
        $addToCartForm.before(feedback);
        break;
      case 'belowForm':
        $addToCartForm.after(feedback);
        break;
      case 'nextButton':
      default:
        $addToCartForm.find(_config.addToCartBtnSelector).after(feedback);
        break;   
    }
    // If you use animate.css
    // $('.ajaxified-cart-feedback').addClass('animated bounceInDown');
    $('.ajaxified-cart-feedback').slideDown();
  };
  var _setText = function($button, label) {
    if ($button.children().length) {
      $button.children().each(function() {
        if ($.trim($(this).text()) !== '') {
          $(this).text(label);
        }
      });
    }
    else {
      $button.val(label).text(label);
    }
  };
  var _init = function() {  
    $(document).ready(function() { 
      $(_config.addToCartFormSelector).submit(function(e) {
        e.preventDefault();
        var $addToCartForm = $(this);
        var $addToCartBtn = $addToCartForm.find(_config.addToCartBtnSelector);
        _setText($addToCartBtn, _config.addingToCartBtnLabel);
        $addToCartBtn.addClass('disabled').prop('disabled', true);
        // Add to cart.
        $.ajax({
          url: _config.shopifyAjaxAddURL,
          dataType: 'json',
          type: 'post',
          data: $addToCartForm.serialize(),
          success: function(itemData) {
            // Re-enable add to cart button.
            $addToCartBtn.addClass('inverted');
            _setText($addToCartBtn, _config.addedToCartBtnLabel);
           // _showFeedback('success','<i class="fa fa-check"></i> Added to cart! <a href="/cart">View cart</a> or <a href="/collections/all">continue shopping</a>.',$addToCartForm);
            window.setTimeout(function(){
              $addToCartBtn.prop('disabled', false).removeClass('disabled').removeClass('inverted');
              _setText($addToCartBtn,_config.addToCartBtnLabel);
            }, _config.howLongTillBtnReturnsToNormal);

            


            // Update cart count and show cart link.
            $.getJSON(_config.shopifyAjaxCartURL, function(cart) {
              // The cart data
              var drawer_item_html = '';              
              var cart_items = cart.items;
              var total_items = cart.item_count;
              //var product_total_price = cart.items_subtotal_price;              
              product_total_price = cart.items_subtotal_price;
              console.log(product_total_price);
              // shipping_bar_message();
              $('.cart-drawer__total-amount').html('$'+((product_total_price * 0.01).toFixed(2)));
              if(total_items == 0){
                $('.cart-drawer__no-item').addClass('cart-drawer__no-item_visible');
              }else{
                $('.cart-drawer__no-item').removeClass('cart-drawer__no-item_visible');
              }
              $('.cart-drawer__count').html(total_items);
              $('.nav__cart-count').html(total_items);
              $('body').addClass('drawer-open');
              console.log(cart);
                for(var i=0; i<=cart_items.length; i++){
                    var product_image = cart_items[i].featured_image.url;
                    var product_name = cart_items[i].product_title;
                    var product_variant_option_name = cart_items[i].options_with_values[0].name;
                    var product_variant_option_value = cart_items[i].options_with_values[0].value;
                    var product_variant = cart_items[i].variant_title;
                    var product_quantity = cart_items[i].quantity;
                    var product_price = cart_items[i].line_price;
                    var product_variant_id = cart_items[i].variant_id;
                    var product_url = cart_items[i].url;
                    
                    // ------------- Add HTML item here -------------//
                    drawer_item_html += '<div class="cart-drawer__item">';
                    drawer_item_html += '<div class="cart-drawer__image">';
                    drawer_item_html += '<img src="'+product_image+'" >';
                    drawer_item_html += '</div>';
                    drawer_item_html += '<div class="cart-drawer__info">';
                    drawer_item_html += '<div class="cart-drawer__title"><a class="cart-drawer__url" href="'+product_url+'">'+product_name+'</a></div>';
                    // drawer_item_html += '<div class="cart-drawer__variant">'+product_variant_option_name+': '+product_variant_option_value+'</div>';
                    drawer_item_html += '<div class="cart-drawer__qty">';
                    drawer_item_html += '<button class="minus-btn cart-drawer__qty-btn" type="button" name="button"><i class="icon-minus"></i></button>';
                    drawer_item_html += '<input type="number"  class="cart-drawer__qty-input" name="updates['+product_variant_id+']" data-id="'+product_variant_id+'"  id="updates_{{ item.key }}" value="'+product_quantity+'" min="1" aria-label="{{ 'cart.label.quantity' | t }}" />';
                    drawer_item_html += '<button class="plus-btn cart-drawer__qty-btn" type="button" name="button"><i class="icon-plus"></i></button>';
                    drawer_item_html += '</div>';
                    drawer_item_html += '</div>';
                    drawer_item_html += '<div class="cart-drawer__price"  data-id="'+product_variant_id+'">$'+((product_price * 0.01).toFixed(2))+'</div>';
                    drawer_item_html += '<div class="cart-drawer__remove">';
                    drawer_item_html += '<a href="#" class="cart-drawer__remove-url" data-id="'+product_variant_id+'"><i class="icon-x" aria-hidden="true"></i></a>';
                    drawer_item_html += '</div>';
                    drawer_item_html += '</div>';
                    $('.cart-drawer__content').html(drawer_item_html);
                    }
                }); 
            }, 
          error: function(XMLHttpRequest) {
            var response = eval('(' + XMLHttpRequest.responseText + ')');
            response = response.description;
            if (response.slice(0,4) === 'All ') {
              _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
              $addToCartBtn.prop('disabled', false);
              _setText($addToCartBtn, _config.soldOutBtnLabel);
              $addToCartBtn.prop('disabled',true);
            }
            else {
              _showFeedback('error', '<i class="fa fa-warning"></i> ' + response, $addToCartForm);
              $addToCartBtn.prop('disabled', false).removeClass('disabled');
              _setText($addToCartBtn, _config.addToCartBtnLabel);
            }
          }
        });   
        return false;    
      });
    });
  };
  return {
    init: function(params) {
        // Configuration
        params = params || {};
        // Merging with defaults.
        $.extend(_config, params);
        // Action
        $(function() {
          _init();
        });
    },    
    getConfig: function() {
      return _config;
    }
  }  
})(jQuery);
Shopify.AjaxifyCart.init();
</script>

{% comment %}
  If you want to animate your feedback message.
{% endcomment %}

{% comment %}
{{ '//cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.0/animate.min.css' | stylesheet_tag }}
{% endcomment %}

<!-- {{ '//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.css' | stylesheet_tag }} -->

<style>
.ajaxified-cart-feedback {
  display: block;
  line-height: 36px;
  font-size: 90%;
  vertical-align: middle;
}
.ajaxified-cart-feedback.success { 
  color: #3D9970;
}
.ajaxified-cart-feedback.error { 
  color: #FF4136; 
} 
.ajaxified-cart-feedback a {
  border-bottom: 1px solid;
}
</style>